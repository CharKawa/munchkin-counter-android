apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$rootProject.projectDir/buildsystem/config.gradle"
apply from: "$rootProject.projectDir/buildsystem/library.gradle"

def configuration = ext.configuration;

android {
    compileSdkVersion configuration.compileSdk
    buildToolsVersion configuration.buildTools

    defaultConfig {
        applicationId configuration.applicationId
        minSdkVersion configuration.minimumSdk
        targetSdkVersion configuration.targetSdk
        versionCode buildVersionCode()
        versionName buildVersionName()
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField("String", "MIXPANEL_API_KEY", "\"" + MIXPANEL_API_KEY +"\"")
        }
        release {
            minifyEnabled true
            buildConfigField("String", "MIXPANEL_API_KEY", "\"" + MIXPANEL_API_KEY +"\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

}

kapt {
    generateStubs = true
}

dependencies {
    compile "${library.kotlin}"
    compile "${library.support_v4}"
    compile "${library.support_compat}"
    compile "${library.support_design}"
    compile "${library.support_recycler}"
    compile "${library.support_card}"
    compile "${library.text_drawable}"
    compile "${library.color_picker}"
    compile "${library.onboarder}"
    compile "${library.mixpanel}"
    compile "${library.mp_android_chart}"
    compile "${library.rxkotlin}"
    compile "${library.rxandroid}"
    compile "${library.sqlbrite}"
    compile "${library.timber}"
    compile "${library.dagger}"
    kapt "${library.dagger_compiler}"
    compile "${library.butterknife}"
    kapt "${library.butterknife_compiler}"
    testCompile "${library.junit}"
    testCompile "${library.mockito}"
}